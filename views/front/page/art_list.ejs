<!doctype html>
<html lang="en" ng-app="myApp">
<head>
	<meta charset="UTF-8">
<meta name="viewport" content="width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<title>发现列表页</title>
<% include ../include/baseLink%>
<script type="text/javascript"  src="/front/dist/art_list.js"></script>
<style type="text/css">
/* 标签重定义 */
/* wrap */
#wrap{width:auto;height:auto;margin:0 auto;position:relative;}
#wrap .box{width:300px;height:auto;padding:10px;border:none;float:left;}
#wrap .box .info{width:280px;height:auto;border-radius:5px;box-shadow:0 0 11px #e6e6e6;background:#fff;}
#wrap .box .info .info2{padding: 14px 14px; font-size: 14px;font-family: "microsoft yahei";color:#666;}
#wrap .box .info .pic{width:260px;height:auto;margin:0 auto;padding-top:10px;}
#wrap .box .info .pic:hover{
	-webkit-animation:shade 3s ease-in-out 1;
	-moz-animation:shade 3s ease-in-out 1;
	-ms-animation:shade 3s ease-in-out 1;
	-o-animation:shade 3s ease-in-out 1;
	animation:shade 3s ease-in-out 1;
}
#wrap .box .info .pic img{width:260px;border-radius:3px;}
#wrap .box .info .title{margin:0;height:45px;margin:0 auto;line-height:45px;text-align:center;font-weight:bold;overflow:hidden;border-bottom:1px solid #f8f8f8;}
#wrap .box .info .title a{color:#666;font-size:16px;}
#wrap .box .info .title a:hover{ text-decoration:none;}
.box .oter{height:45px; line-height:45px;margin:0 12px;}
.box .oter span.brow{background:url(/front/resource/images/gnumb.jpg) no-repeat;padding-left:20px;color:#999; font-size:12px;margin-left:2px;}
.box .oter span.like{background:url(/front/resource/images/like.jpg) no-repeat;padding-left:20px;color:#999; font-size:12px;margin-left:16px;}
.box .oter span.date{ float:right;color:#999; font-size:12px;margin-right:6px;}
</style>
</head>
<body ng-controller="art_list_control">
<% include ../include/head %>
<div class="bs-docs-featurette">
	<div class="container projects">
    	<div class="scp_title"><span class="dtle">发现</span><span class="bytle">生活美好的事物从发现开始</span></div>
    	<div class="row sm1" id="picContent" >
        	<div id="wrap">
	        	<%	_.each(articles,function(ele){ %>
						<div class="box">
							<div class="info">
								<div class="pic">
									<a href="/front/toArtDetail/<%- ele._id %>" target="_blank">
									<img src="<%- ele.contentPicUrl %>"></a></div>
								<div class="title"><a href="/front/toArtDetail/<%- ele._id %>" target="_blank"><%- ele.title %></a></div>
								<div class="info2">
									<%- ele.introduce.length < 54 ? 
										ele.introduce.substring(0,53) 
										: ele.introduce.substring(0,53) + '...' %>
								</div>
				                <div class="oter">
				                	<span class="brow"><%- ele.checkcounts %></span>
				                	<span class="like"><%- ele.collections.length %></span>
									<span class="like"><%- ele.collections.length %></span>
				                	<span class="date"><%- $moment(ele.creatTime).format("YYYY-MM-DD") %></span>
			                	</div>
							</div>
						</div>
	        	<%	}); %>
				<div class="box" ng-repeat="ele in array_custom.$array track by ele.creatTime">
					<div class="info">
						<div class="pic">
							<a href="/front/toArtDetail/{{- ele._id }}" target="_blank">
							<img ng-src="{{ ele.contentPicUrl }}"></a>
						</div>
						<div class="title"><a href="/front/toArtDetail/{{ ele._id }}" target="_blank">{{ ele.title }}</a></div>
						<div class="info2">
									{{  ele.introduce.length < 54 ? 
										ele.introduce.substring(0,53) 
										: ele.introduce.substring(0,53) + '...' }} 
								</div>
						<div class="oter">
							<span class="brow">{{ ele.checkcounts }}</span>
							<span class="like">{{ ele.collections.length }}</span>
							<span class="date">{{ ele.creatTime | date:'yyyy-MM-dd' }}</span>
						</div>
					</div>
				</div>
			</div>
        </div>
    </div>
</div>
</body>
<script type="text/javascript">
window.onload = function(){
	//运行瀑布流主函数
	PBL('wrap','box');
	
	//模拟数据
	var data = [{'src':'1.jpg','title':'This is a title.'},{'src':'2.jpg','title':'This is a title.'},{'src':'3.jpg','title':'This is a title.'},{'src':'4.jpg','title':'This is a title.'},{'src':'5.jpg','title':'This is a title.'},{'src':'6.jpg','title':'This is a title.'},{'src':'7.jpg','title':'This is a title.'},{'src':'8.jpg','title':'This is a title.'},{'src':'9.jpg','title':'This is a title.'},{'src':'10.jpg','title':'This is a title.'}];
	
	
	//设置滚动加载
	window.onscroll = function(){
		//校验数据请求
		if(getCheck()){
			var wrap = document.getElementById('wrap');
			for(i in data){
				//创建box
				var box = document.createElement('div');
				box.className = 'box';
				wrap.appendChild(box);
				//创建info
				var info = document.createElement('div');
				info.className = 'info';
				box.appendChild(info);
				//创建pic
				var pic = document.createElement('div');
				pic.className = 'pic';
				info.appendChild(pic);
				//创建img
				var img = document.createElement('img');
				img.src = 'images/'+data[i].src;
				img.style.height = 'auto';
				pic.appendChild(img);
				//创建title
				var title = document.createElement('div');
				title.className = 'title';
				info.appendChild(title);
				//创建a标记
				var a = document.createElement('a');
				a.innerHTML = data[i].title;
				title.appendChild(a);
			}
			PBL('wrap','box');
		}
	}
}
/**
* 瀑布流主函数
* @param  wrap	[Str] 外层元素的ID
* @param  box 	[Str] 每一个box的类名
*/
function PBL(wrap,box){
	//	1.获得外层以及每一个box
	var wrap = document.getElementById(wrap);
	var boxs  = getClass(wrap,box);
	//	2.获得屏幕可显示的列数
	var boxW = boxs[0].offsetWidth;
	var colsNum = Math.floor(4);//获取瀑布流列数
	wrap.style.width = boxW*colsNum+'px';//为外层赋值宽度
	//	3.循环出所有的box并按照瀑布流排列
	var everyH = [];//定义一个数组存储每一列的高度
	for (var i = 0; i < boxs.length; i++) {
		if(i<colsNum){
			everyH[i] = boxs[i].offsetHeight;
		}else{
			var minH = Math.min.apply(null,everyH);//获得最小的列的高度
			var minIndex = getIndex(minH,everyH); //获得最小列的索引
			getStyle(boxs[i],minH,boxs[minIndex].offsetLeft,i);
			everyH[minIndex] += boxs[i].offsetHeight;//更新最小列的高度
		}
	}
}
/**
* 获取类元素
* @param  warp		[Obj] 外层
* @param  className	[Str] 类名
*/
function getClass(wrap,className){
	var obj = wrap.getElementsByTagName('*');
	var arr = [];
	for(var i=0;i<obj.length;i++){
		if(obj[i].className == className){
			arr.push(obj[i]);
		}
	}
	return arr;
}
/**
* 获取最小列的索引
* @param  minH	 [Num] 最小高度
* @param  everyH [Arr] 所有列高度的数组
*/
function getIndex(minH,everyH){
	for(index in everyH){
		if (everyH[index] == minH ) return index;
	}
}

function getPicture(callback){
	setTimeout(function(){
		return 
		
	})	
}



/**
* 数据请求检验
*/
function getCheck(){
	var documentH = document.documentElement.clientHeight;
	var scrollH = document.documentElement.scrollTop || document.body.scrollTop;
	return documentH+scrollH>=getLastH() ?false:false;
}
/**
* 获得最后一个box所在列的高度
*/
function getLastH(){
	var wrap = document.getElementById('wrap');
	var boxs = getClass(wrap,'box');
	return boxs[boxs.length-1].offsetTop+boxs[boxs.length-1].offsetHeight;
}
/**
* 设置加载样式
* @param  box 	[obj] 设置的Box
* @param  top 	[Num] box的top值
* @param  left 	[Num] box的left值
* @param  index [Num] box的第几个
*/
var getStartNum = 0;//设置请求加载的条数的位置
function getStyle(box,top,left,index){
    if (getStartNum>=index) return;
    $(box).css({
    	'position':'absolute',
        'top':top,
        "left":left,
        "opacity":"0"
    });
    $(box).stop().animate({
        "opacity":"1"
    },999);
    getStartNum = index;//更新请求数据的条数位置
}
</script>
</html>
